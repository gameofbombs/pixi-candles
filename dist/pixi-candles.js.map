{"version":3,"file":"pixi-candles.js","sourceRoot":"","sources":["../src/Bars.ts","../src/ExtraLineGraphics.ts","../src/Plot.ts","../src/PlotGradient.ts","../src/xporter.ts"],"names":[],"mappings":"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","sourcesContent":["namespace pixi_candles {\r\n    const barVert = `\r\nattribute vec4 aRect;\r\nattribute vec2 aQuad;\r\nattribute vec4 aColor;\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 translationMatrix;\r\nuniform float resolution;\r\nuniform vec4 uColor;\r\n\r\nvarying vec4 vPixelPos;\r\nvarying vec4 vPixelRect;\r\nvarying vec4 vColor;\r\n\r\nvoid main(void){\r\n    vec2 p1 = (translationMatrix * vec3(aRect.xy, 1.0)).xy;\r\n    vec2 p2 = (translationMatrix * vec3(aRect.xy + aRect.zw, 1.0)).xy;\r\n\r\n    vec2 leftTop = p1;\r\n    vec2 rightBottom = p2;\r\n    vec2 sign = aQuad;\r\n\r\n    // handle negative width/height, or translationMatrix .a .d < 0\r\n    if (p1.x > p2.x) {\r\n        sign.x = 1.0 - aQuad.x;\r\n        leftTop.x = p2.x;\r\n        rightBottom.x = p1.x;\r\n    }\r\n    if (p1.y > p2.y) {\r\n        sign.y = 1.0 - aQuad.y;\r\n        leftTop.y = p2.y;\r\n        rightBottom.y = p1.y;\r\n    }\r\n\r\n    vPixelRect = vec4(leftTop * resolution, rightBottom * resolution);\r\n\r\n    vec2 pos = (translationMatrix * vec3(aRect.xy + aRect.zw * aQuad, 1.0)).xy;\r\n    pos = floor(pos * resolution + 0.01 + sign * 0.98);\r\n    vPixelPos = vec4(pos - 0.5, pos + 0.5);\r\n    gl_Position = vec4((projectionMatrix * vec3(pos / resolution, 1.0)).xy, 0.0, 1.0);\r\n\r\n    vColor = aColor * uColor;\r\n}`;\r\n    const barFrag = `\r\nvarying vec4 vPixelPos;\r\nvarying vec4 vPixelRect;\r\nvarying vec4 vColor;\r\n\r\nvoid main(void) {\r\n    vec2 leftTop = max(vPixelPos.xy, vPixelRect.xy);\r\n    vec2 rightBottom = min(vPixelPos.zw, vPixelRect.zw);\r\n    vec2 area = max(rightBottom - leftTop, 0.0);\r\n    float clip = area.x * area.y;\r\n\r\n    gl_FragColor = vColor * clip;\r\n}`;\r\n\r\n    export class BarsShader extends PIXI.MeshMaterial {\r\n        static _prog: PIXI.Program = null;\r\n\r\n        static getProgram(): PIXI.Program {\r\n            if (!BarsShader._prog) {\r\n                BarsShader._prog = new PIXI.Program(barVert, barFrag);\r\n            }\r\n            return BarsShader._prog;\r\n        }\r\n\r\n        constructor() {\r\n            super(PIXI.Texture.WHITE, {\r\n                uniforms: {\r\n                    resolution: 1\r\n                },\r\n                program: BarsShader.getProgram()\r\n            });\r\n        }\r\n    }\r\n\r\n    import TYPES = PIXI.TYPES;\r\n\r\n    export class BarsGeometry extends PIXI.Geometry {\r\n        constructor(_static = false) {\r\n            super();\r\n            this.initGeom(_static);\r\n            this.reset();\r\n        }\r\n\r\n        lastLen = 0;\r\n        lastPointNum = 0;\r\n        lastPointData = 0;\r\n        points: Array<number> = [];\r\n        _floatView: Float32Array = null;\r\n        _u32View: Uint32Array = null;\r\n        _buffer: PIXI.Buffer = null;\r\n        _quad: PIXI.Buffer = null;\r\n        _indexBuffer: PIXI.Buffer = null;\r\n\r\n        initGeom(_static: boolean) {\r\n            this._buffer = new PIXI.Buffer(new Float32Array(0), _static, false);\r\n\r\n            this._quad = new PIXI.Buffer(new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]), true, false);\r\n\r\n            this._indexBuffer = new PIXI.Buffer(new Uint16Array([0, 1, 2, 0, 2, 3]), true, true);\r\n\r\n            this.addAttribute('aRect', this._buffer, 4, false, TYPES.FLOAT, undefined, undefined, true)\r\n                .addAttribute('aColor', this._buffer, 4, true, TYPES.UNSIGNED_BYTE, undefined, undefined, true)\r\n                .addAttribute('aQuad', this._quad, 2, false, TYPES.FLOAT)\r\n                .addIndex(this._indexBuffer);\r\n        }\r\n\r\n        stridePoints = 5;\r\n        strideFloats = 5;\r\n        strideBytes = 20;\r\n\r\n        addRect(x: number, y: number, w: number, h: number, color: number) {\r\n            const {points} = this;\r\n            points.push(x);\r\n            points.push(y);\r\n            points.push(w);\r\n            points.push(h);\r\n            points.push(color);\r\n        }\r\n\r\n        invalidate(pointNum = 0) {\r\n            this.lastPointNum = Math.min(pointNum, this.lastPointNum);\r\n        }\r\n\r\n        reset() {\r\n            if (this.lastLen > 0) {\r\n                this.clearBufferData();\r\n            }\r\n            this.lastLen = 0;\r\n            this.lastPointData = 0;\r\n            this.points.length = 0;\r\n            this.instanceCount = 0;\r\n        }\r\n\r\n        clearBufferData() {\r\n            const {points, strideBytes, stridePoints} = this;\r\n            this.lastPointNum = 0;\r\n            this.lastPointData = 0;\r\n            const arrBuf = new ArrayBuffer(strideBytes * points.length / stridePoints);\r\n            this.lastLen = points.length;\r\n            this._floatView = new Float32Array(arrBuf);\r\n            this._u32View = new Uint32Array(arrBuf);\r\n            this._buffer.update(arrBuf);\r\n        }\r\n\r\n        updateBuffer() {\r\n            const {points, stridePoints, strideFloats} = this;\r\n\r\n            if (this.lastLen > points.length) {\r\n                this.lastLen = -1;\r\n            }\r\n            if (this.lastLen < points.length\r\n                || this.lastPointNum < this.lastLen) { // TODO: partial upload\r\n                this.clearBufferData();\r\n            }\r\n\r\n            if (this.lastPointNum == this.lastLen) {\r\n                return;\r\n            }\r\n\r\n            const {_floatView, _u32View} = this;\r\n            this.lastPointData = Math.min(this.lastPointData, this.lastPointNum);\r\n            let j = Math.round(this.lastPointNum * strideFloats / stridePoints); //actually that's int division\r\n            for (let i = this.lastPointNum; i < points.length; i += stridePoints) {\r\n                _floatView[j++] = points[i];\r\n                _floatView[j++] = points[i + 1];\r\n                _floatView[j++] = points[i + 2];\r\n                _floatView[j++] = points[i + 3];\r\n\r\n                const rgb = points[i + 4];\r\n                const bgra = ((rgb >> 16) & 0xff) | (rgb & 0xff00) | ((rgb & 0xff) << 16) | (255 << 24);\r\n                _u32View[j++] = bgra;\r\n            }\r\n            this._buffer.update();\r\n            this.instanceCount = Math.round(points.length / stridePoints);\r\n\r\n            this.lastPointNum = this.lastLen;\r\n            this.lastPointData = this.lastLen; // TODO: partial upload\r\n\r\n            if (this.legacyGeom) {\r\n                this.updateLegacy();\r\n            }\r\n        }\r\n\r\n        legacyGeom: PIXI.Geometry = null;\r\n        legacyBuffer: PIXI.Buffer = null;\r\n\r\n        initLegacy() {\r\n            if (this.legacyGeom) {\r\n                return;\r\n            }\r\n            this.legacyGeom = new PIXI.Geometry();\r\n            this.legacyBuffer = new PIXI.Buffer(new Float32Array(0), false, false);\r\n            this.legacyGeom.addAttribute('aRect', this.legacyBuffer, 4, false, TYPES.FLOAT)\r\n                .addAttribute('aColor', this.legacyBuffer, 4, true, TYPES.UNSIGNED_BYTE)\r\n                .addAttribute('aQuad', this.legacyBuffer, 2, false, TYPES.FLOAT)\r\n                .addIndex(new PIXI.Buffer(new Uint16Array([0, 1, 2, 0, 2, 3]), false, true));\r\n        }\r\n\r\n        updateLegacy() {\r\n            const {legacyBuffer, _floatView, _u32View, strideFloats} = this;\r\n            const strideLegacy = 7;\r\n            const quadsCount = this._floatView.length / strideFloats;\r\n            const legacyLen = quadsCount * strideLegacy * 4;\r\n            if ((legacyBuffer.data as Float32Array).length !== legacyLen) {\r\n                legacyBuffer.data = new Float32Array(legacyLen);\r\n                this.legacyGeom.getIndex().update(PIXI.utils.createIndicesForQuads(quadsCount));\r\n            }\r\n            const floats: Float32Array = legacyBuffer.data as any;\r\n            const quad: Float32Array = this._quad.data as any;\r\n\r\n            for (let i = 0, j = 0; i < this._floatView.length;) {\r\n                for (let k = 0; k < 4; k++) {\r\n                    floats[j++] = _floatView[i];\r\n                    floats[j++] = _floatView[i + 1];\r\n                    floats[j++] = _floatView[i + 2];\r\n                    floats[j++] = _floatView[i + 3];\r\n                    floats[j++] = _floatView[i + 4];\r\n                    floats[j++] = quad[k * 2]\r\n                    floats[j++] = quad[k * 2 + 1];\r\n                }\r\n                i += strideFloats;\r\n            }\r\n            legacyBuffer.update();\r\n        }\r\n    }\r\n\r\n    export class Bars extends PIXI.Mesh {\r\n        constructor() {\r\n            super(new BarsGeometry(), new BarsShader());\r\n        }\r\n\r\n        addRect(x: number, y: number, w: number, h: number, color: number) {\r\n            const geometry = this.geometry as BarsGeometry;\r\n            geometry.addRect(x, y, w, h, color);\r\n        }\r\n\r\n        clear() {\r\n            (this.geometry as BarsGeometry).reset();\r\n        }\r\n\r\n        _renderDefault(renderer: PIXI.Renderer): void {\r\n            const geometry = this.geometry as BarsGeometry;\r\n\r\n            const useLegacy = !renderer.geometry.hasInstance;\r\n            if (useLegacy) {\r\n                geometry.initLegacy();\r\n            }\r\n            geometry.updateBuffer();\r\n            if (geometry.instanceCount === 0) {\r\n                return;\r\n            }\r\n            const rt = renderer.renderTexture.current;\r\n            this.shader.uniforms.resolution = rt ? rt.baseTexture.resolution : renderer.resolution;\r\n\r\n            if (useLegacy) {\r\n                // hacky!\r\n                (this as any).geometry = geometry.legacyGeom;\r\n                super._renderDefault(renderer);\r\n                (this as any).geometry = geometry;\r\n                return;\r\n            }\r\n            super._renderDefault(renderer);\r\n        }\r\n\r\n        _renderCanvas(renderer: PIXI.CanvasRenderer): void {\r\n            const {points} = this.geometry as BarsGeometry;\r\n            const {context} = renderer;\r\n\r\n            renderer.setContextTransform(this.transform.worldTransform);\r\n\r\n            context.beginPath();\r\n            let clr = -1;\r\n            for (let i = 0; i < points.length; i += 5) {\r\n                if (clr !== points[i + 4]) {\r\n                    clr = points[i + 4];\r\n                    let fill = PIXI.utils.hex2string(clr);\r\n                    context.fillStyle = fill;\r\n                }\r\n                context.beginPath();\r\n                context.rect(points[i], points[i + 1], points[i + 2], points[i + 3]);\r\n                context.fill();\r\n            }\r\n            context.beginPath();\r\n        }\r\n    }\r\n}\r\n","namespace pixi_candles {\n    const _vertex = (webgl1: boolean) => `#version ${webgl1 ? \"100\" : \"300 es\"}\nprecision highp float;\n\n${webgl1 ? \"attribute\" : \"in\"} vec4 aAnchor;\n${webgl1 ? \"attribute\" : \"in\"} float aSide;\n${webgl1 ? \"attribute\" : \"in\"} float aStroke;\n${webgl1 ? \"attribute\" : \"in\"} vec4 aColor;\n\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform mat3 uTextureMatrix;\nuniform float uDepth;\n\nuniform highp float uStroke;\nuniform highp float uCap;\n\n${[\n        \"vec2 vPos\",\n        \"vec4 vColor\",\n        \"vec4 vDa\",\n        \"float vStroke\",\n        \"vec4 vA\",\n        \"vec2 vD\",\n        \"vec2 vS\"\n    ]\n        .map((e) => (webgl1 ? \"varying \" : \"out \") + e + \";\")\n        .join(\"\\n\")}\n\nvoid main(void)\n{\n    vec2 side = vec2(\n        -2.0 * (0.5 - mod(aSide, 2.)),\n        -2.0 * (0.5 - step(1.5, aSide))\n    );\n\n    vD = aAnchor.zw - aAnchor.xy;\n    vec2 nn = normalize (vD);\n    vec2 tt = vec2(-nn.y, nn.x);\n\n    vec2 main = aAnchor.xy;\n\n    if(side.x > 0.) {\n        main = aAnchor.zw;\n    }\n\n    vS = side;\n\n    float cap = uCap;\n\n    if(cap > 1.) {\n        cap -=1.;\n    }\n\n    vec2 t = side.x * nn * cap + side.y * tt;\n    vec2 pos = main + t * uStroke * aStroke;\n\n    vPos = pos;\n    vA = aAnchor;\n    vDa = vec4(aAnchor.xy - pos, pos - aAnchor.zw);\n    vColor = aColor;\n    vStroke = uStroke * aStroke;\n\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(pos, 1.0)).xy, uDepth, 1.);\n}\n`;\n\n    const _frag = (webgl1: boolean, msaaEdge = false) => `#version ${\n        webgl1 ? \"100\" : \"300 es\"\n    }\n${webgl1 ? `#extension GL_OES_standard_derivatives : enable` : \"\"}\nprecision highp float;\n\nuniform vec4 uColor;\nuniform sampler2D uSampler;\n\nuniform highp float uCap;\nuniform highp float uDiscard;\n\n${[\n        \"vec2 vPos\",\n        \"vec4 vColor\",\n        \"float vStroke\",\n        \"vec4 vDa\",\n        \"vec4 vA\",\n        \"vec2 vD\",\n        \"vec2 vS\"\n    ]\n        .map((e) => (webgl1 ? \"varying \" : \"in \") + e + \";\")\n        .join(\"\\n\")}\n\n${\n        webgl1\n            ? \"\"\n            : `\nlayout(location = 0) out vec4 out_FragColor;\n`\n    }\n\nfloat calcRound(vec2 v, vec2 da, float s) {\n    float l = length(da);\n    float d = dot(vD, da);\n\n    return smoothstep(\n        vStroke - s * 0.5,\n        vStroke +  s * 0.5, l) * step(1., d);\n}\n\nvoid main(void)\n{\n    float alpha = 1.;\n    vec4  c = uColor * vColor;//vec4(0.5 * (1. + vS), 0., 1.);\n\n${\n        webgl1\n            ? `\n    float vsD = 0.001;\n    #ifdef  GL_OES_standard_derivatives\n        vsD = fwidth(vS.g);\n    #endif`\n            : `\n    float vsD = fwidth(vS.g);\n    `\n    }\n    if(uCap > 1.){\n\n${\n        webgl1\n            ? `\n        float step = 0.05;\n        #ifdef  GL_OES_standard_derivatives\n            step = length(fwidth(gl_FragCoord.xy)) * 1.0;\n        #endif\n        `\n            : `\n        float step = length(fwidth(gl_FragCoord.xy)) * 1.0;\n        `\n    }\n        float r1 = calcRound(vPos, vDa.xy + vsD, step);\n        float r2 = calcRound(vPos, vDa.zw + vsD, step);\n\n        alpha = 1. - (r1 + r2);\n    }\n\n    ${msaaEdge ? `alpha *= 1. - smoothstep(1. - vsD, 1., abs(vS.g));` : \"\"}\n\n    if(alpha < 1. && uDiscard > 0.0)\n       discard;\n\n    ${webgl1 ? \"gl_FragColor\" : \"out_FragColor\"} = c * alpha;\n}\n`;\n\n    export class LineMesh extends PIXI.Mesh {\n        shaderApplied: boolean = false;\n        needApplyAlpha: boolean = false;\n\n        constructor(g: PIXI.Geometry) {\n            super(\n                g,\n                new PIXI.MeshMaterial(PIXI.Texture.WHITE, {\n                    uniforms: {\n                        uStroke: 1,\n                        uDiscard: 0,\n                        uDepth: 0,\n                        uCap: 2 // 0 - none, 1 - square, 2 - round\n                    }\n                })\n            );\n\n            this.shaderApplied = false;\n        }\n\n        buildShader(r: PIXI.Renderer) {\n            if (!this.shaderApplied) {\n                const webgl = r.gl instanceof WebGLRenderingContext;\n\n                if (webgl) {\n                    r.gl.getExtension(\"OES_standard_derivatives\");\n                }\n\n                this.shader.program = PIXI.Program.from(\n                    _vertex(webgl),\n                    _frag(webgl, !r.gl.getContextAttributes()!!.antialias),\n                    \"LineShader\"\n                );\n                (this.shader as any).batchable = false;\n\n                this.shaderApplied = true;\n                r.on(\"postrender\", () => this.resetDepth(r));\n            }\n        }\n\n        resetDepth(r: PIXI.Renderer) {\n            //@ts-ignore\n            r.depth = 0;\n        }\n\n        render(renderer: PIXI.Renderer) {\n            this.buildShader(renderer);\n            super.render(renderer);\n        }\n\n        _renderDefault(renderer: PIXI.Renderer) {\n            const needCombine = this.alpha < 1 || this.needApplyAlpha;\n            const gl = renderer.gl;\n\n            if (needCombine) {\n                //@ts-ignore\n                if (!renderer.depth) {\n                    //@ts-ignore\n                    renderer.depth = 1;\n                }\n\n                //@ts-ignore\n                const depth = renderer.depth++ / 1000;\n                renderer.batch.flush();\n\n                gl.depthFunc(gl.NOTEQUAL);\n                gl.enable(gl.DEPTH_TEST);\n\n                this.shader.uniforms.uDiscard = 1;\n                this.shader.uniforms.uDepth = depth;\n\n                super._renderDefault(renderer);\n\n                this.shader.uniforms.uDiscard = 0;\n            }\n\n            super._renderDefault(renderer);\n\n            if (needCombine) {\n                gl.disable(gl.DEPTH_TEST);\n                gl.clear(gl.DEPTH_BUFFER_BIT);\n            }\n        }\n    }\n\n    function buildLineBuffer(\n        data: PIXI.GraphicsData,\n        input: {\n            anchors: number[];\n            indices: number[];\n            stokes: number[];\n            side: number[];\n            colors: number[];\n        }\n    ) {\n        const points = data.points;\n        const segs = points.length - 2;\n\n        if (segs < 2) {\n            return undefined;\n        }\n\n        const anchors = input.anchors;\n        const index = input.indices;\n        const ids = input.side;\n        const colors = input.colors;\n        const strokes = input.stokes;\n        const offset = ids.length;\n\n        const color = PIXI.utils.hex2rgb(data.lineStyle.color, []) as number[];\n\n        const len = segs / 2;\n        for (let i = 0; i < len + 1; i++) {\n            const o = (i % len) * 2;\n\n            for (let m = 0; m < 4; m++) {\n                anchors.push(points[o], points[o + 1], points[o + 2], points[o + 3]);\n                strokes.push(data.lineStyle.width);\n                colors.push(color[0], color[1], color[2], data.lineStyle.alpha);\n            }\n\n            const ofs = offset + (i % len) * 4;\n\n            index.push(ofs + 0, ofs + 1, ofs + 2, ofs + 3, ofs + 2, ofs + 1);\n            // id is looped\n            ids.push(0, 1, 2, 3);\n        }\n\n        return input;\n    }\n\n    export class ExtraGraphicsGeometry extends PIXI.GraphicsGeometry {\n        _isolatedLines: PIXI.GraphicsData[] = [];\n        _meshGeom: PIXI.Geometry;\n        needApplyAlpha: boolean = false;\n\n        updateBatches(indeces32: boolean) {\n            if (!(this.validateBatching as any)()) {\n                return;\n            }\n\n            this._isolatedLines = this.graphicsData.filter((e) => e.lineStyle.visible);\n\n            //\n            this.graphicsData = this.graphicsData.filter((e) => {\n                e.lineStyle.visible = false; // disable lines from render\n                return e.fillStyle !== null;\n            });\n\n            super.updateBatches(indeces32);\n\n            this.populateMeshGeometry();\n        }\n\n        populateMeshGeometry() {\n            const input = {\n                anchors: [] as Array<number>,\n                indices: [] as Array<number>,\n                stokes: [] as Array<number>,\n                side: [] as Array<number>,\n                colors: [] as Array<number>\n            };\n\n            let alpha = false;\n\n            for (let d of this._isolatedLines) {\n                buildLineBuffer(d, input);\n                alpha = alpha || d.lineStyle.alpha < 1;\n            }\n\n            const g = new PIXI.Geometry();\n\n            g.addAttribute(\"aAnchor\", input.anchors, 4);\n            g.addAttribute(\"aSide\", input.side, 1);\n            g.addAttribute(\"aStroke\", input.stokes, 1);\n            g.addAttribute(\"aColor\", input.colors, 4, true);\n            g.addIndex(input.indices);\n\n            this.needApplyAlpha = alpha;\n\n            this._meshGeom = g;\n        }\n    }\n\n    export class ExtraLineGraphics extends PIXI.Graphics {\n        _subMesh: LineMesh;\n\n        constructor() {\n            super(new ExtraGraphicsGeometry());\n        }\n\n        _render(r: PIXI.Renderer) {\n            super._render(r);\n\n            const g = this.geometry as ExtraGraphicsGeometry;\n            if (g._meshGeom) {\n                if (!this._subMesh) {\n                    this._subMesh = new LineMesh(g._meshGeom);\n                } else {\n                    //@ts-ignore\n                    this._subMesh.geometry = g._meshGeom;\n                }\n\n                this._subMesh.transform.worldTransform = this.transform.worldTransform;\n\n                this._subMesh.needApplyAlpha = g.needApplyAlpha;\n                this._subMesh.buildShader(r);\n                this._subMesh._renderDefault(r);\n            }\n        }\n    }\n}\n","namespace pixi_candles {\n    const plotVert = `\nattribute vec2 aPoint0;\nattribute vec2 aPoint1;\nattribute vec2 aSides;\nattribute vec2 aQuad;\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform float resolution;\nuniform vec2 lineWidth;\nuniform float miterLimit;\n\nvarying vec3 line;\nvarying vec3 lineLeft;\nvarying vec3 lineRight;\nvarying vec4 vPixelPos;\n\nconst float eps = 0.001;\n\nvoid main(void) {\n    float lenX = length(translationMatrix * vec3(1.0, 0.0, 0.0));\n    float w = (lineWidth.x * lenX + lineWidth.y) * 0.5 * resolution;\n\n    vec2 p0 = (translationMatrix * vec3(aPoint0, 1.0)).xy;\n    vec2 p1 = (translationMatrix * vec3(aPoint1, 1.0)).xy;\n\n    p0 *= resolution;\n    p1 *= resolution;\n\n    vec2 k0 = (translationMatrix * vec3(1.0, aSides[0], 0.0)).xy;\n    vec2 k1 = (translationMatrix * vec3(1.0, aSides[1], 0.0)).xy;\n\n    if (p0.x > p1.x) {\n        // make everything positive\n        vec2 tmp = p0;\n        p0 = p1;\n        p1 = tmp;\n        tmp = k0;\n        k0 = k1;\n        k1 = tmp;\n    }\n\n    line.x = (p1.y - p0.y) / (p1.x - p0.x);\n    line.y = p0.y - line.x * p0.x;\n    line.z = w * sqrt(line.x * line.x + 1.0);\n\n    lineLeft.x = k0.y / k0.x;\n    lineLeft.y = p0.y - lineLeft.x * p0.x;\n    lineLeft.z = w * sqrt(lineLeft.x * lineLeft.x + 1.0);\n\n    lineRight.x = k1.y / k1.x;\n    lineRight.y = p1.y - lineRight.x * p1.x;\n    lineRight.z = w * sqrt(lineRight.x * lineRight.x + 1.0);\n\n    // calculating quad\n    vec2 pos = vec2(0.0);\n\n    vec2 sign = aQuad;\n    // strange rounding\n    if (abs(line.x) < 10.0 && p1.x - p0.x > 3.0) {\n        sign.x = 0.5;\n    }\n\n    float H = 0.0;\n    if (aQuad.x < 0.5) {\n        H = min(miterLimit * line.z, max(lineLeft.z, line.z));\n        pos = p0;\n    } else {\n        H = min(miterLimit * line.z, max(lineRight.z, line.z));\n        pos = p1;\n    }\n    H += 2.0;\n    pos.y += H * (aQuad.y * 2.0 - 1.0);\n\n    pos.y -= (pos.x - floor(pos.x + eps + sign.x)) * line.x;\n    pos = floor(pos + eps + sign * (1.0 - 2.0 * eps));\n    vPixelPos = vec4(pos - 0.5, pos + 0.5);\n    gl_Position = vec4((projectionMatrix * vec3(pos / resolution, 1.0)).xy, 0.0, 1.0);\n}`;\n    const plotFrag = `\nvarying vec3 line;\nvarying vec3 lineLeft;\nvarying vec3 lineRight;\nvarying vec4 vPixelPos;\nuniform vec4 uColor;\nuniform vec4 uGeomColor;\n\nfloat cut(float x, float y1, float y2) {\n    vec2 range = vec2(dot(line, vec3(x, 1.0, -1.0)), dot(line, vec3(x, 1.0, 1.0)));\n    if (line.x + lineLeft.x > 0.0) {\n        float v = dot(lineLeft, vec3(x, 1.0, -1.0));\n        if (line.x < lineLeft.x) {\n            range.x = min(range.x, v);\n        } else {\n            range.x = max(range.x, v);\n        }\n    } else {\n        float v = dot(lineLeft, vec3(x, 1.0, 1.0));\n        if (line.x < lineLeft.x) {\n            range.y = min(range.y, v);\n        } else {\n            range.y = max(range.y, v);\n        }\n    }\n\n    if (line.x + lineRight.x < 0.0) {\n        float v = dot(lineRight, vec3(x, 1.0, -1.0));\n        if (line.x > lineRight.x) {\n            range.x = min(range.x, v);\n        } else {\n            range.x = max(range.x, v);\n        }\n    } else {\n        float v = dot(lineRight, vec3(x, 1.0, 1.0));\n        if (line.x > lineRight.x) {\n            range.y = min(range.y, v);\n        } else {\n            range.y = max(range.y, v);\n        }\n    }\n\n    range.x = max(range.x, y1);\n    range.y = min(range.y, y2);\n    return max(range.y - range.x, 0.0);\n}\n\nconst float N = 8.0;\nconst float step = 1.0 / N;\nconst float div = 1.0 / (N + 1.0);\n\nvoid main(void) {\n    // float cutLeft = cut(vPixelPos.x, vPixelPos.y, vPixelPos.w);\n    // float cutRight = cut(vPixelPos.z, vPixelPos.y, vPixelPos.w);\n    // float clip = (cutLeft + cutRight) / 2.0;\n\n    float d = (vPixelPos.z - vPixelPos.x);\n    float clip = 0.0;\n    for (float i = 0.0; i < N; i += 1.) {\n        clip += cut(vPixelPos.x + d * i * step, vPixelPos.y, vPixelPos.w);\n    }\n    clip *= div;\n\n    gl_FragColor = uColor * clip + uGeomColor * (1.0 - clip);\n}`;\n\n    export class PlotShader extends PIXI.MeshMaterial {\n        static _prog: PIXI.Program = null;\n\n        static getProgram(): PIXI.Program {\n            if (!PlotShader._prog) {\n                PlotShader._prog = new PIXI.Program(plotVert, plotFrag);\n            }\n            return PlotShader._prog;\n        }\n\n        constructor() {\n            super(PIXI.Texture.WHITE, {\n                uniforms: {\n                    resolution: 1,\n                    lineWidth: new Float32Array([1, 0]),\n                    miterLimit: 5,\n                    uGeomColor: new Float32Array([0, 0, 0, 0]),\n                },\n                program: PlotShader.getProgram()\n            });\n        }\n    }\n\n    import TYPES = PIXI.TYPES;\n\n    export class PlotGeometry extends PIXI.Geometry {\n        constructor(_static = false) {\n            super();\n            this.initGeom(_static);\n            this.reset();\n        }\n\n        jointStyle = PIXI.LINE_JOIN.BEVEL;\n        lastLen = 0;\n        lastPointNum = 0;\n        lastPointData = 0;\n        updateId = 0;\n        points: Array<number> = [];\n        _floatView: Float32Array = null;\n        _u32View: Uint32Array = null;\n        _buffer: PIXI.Buffer = null;\n        _quad: PIXI.Buffer = null;\n        _indexBuffer: PIXI.Buffer = null;\n\n        initGeom(_static: boolean) {\n            this._buffer = new PIXI.Buffer(new Float32Array(0), _static, false);\n\n            this._quad = new PIXI.Buffer(new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]), true, false);\n\n            this._indexBuffer = new PIXI.Buffer(new Uint16Array([0, 1, 2, 0, 2, 3]), true, true);\n\n            this.addAttribute('aPoint0', this._buffer, 2, false, TYPES.FLOAT, undefined, undefined, true)\n                .addAttribute('aPoint1', this._buffer, 2, false, TYPES.FLOAT, undefined, undefined, true)\n                .addAttribute('aSides', this._buffer, 2, false, TYPES.FLOAT, undefined, undefined, true)\n                .addAttribute('aQuad', this._quad, 2, false, TYPES.FLOAT)\n                .addIndex(this._indexBuffer);\n        }\n\n        stridePoints = 2;\n        strideFloats = 6;\n        strideBytes = 24;\n\n        moveTo(x: number, y: number) {\n            const {points} = this;\n            points.push(x);\n            points.push(y);\n        }\n\n        lineTo(x: number, y: number) {\n            const {points} = this;\n            points.push(x);\n            points.push(y);\n        }\n\n\n        lineBy(dx: number, dy: number) {\n            const {points, stridePoints} = this;\n\n            const x = points[points.length - stridePoints];\n            const y = points[points.length - stridePoints + 1];\n\n            points.push(x + dx);\n            points.push(y + dy);\n        }\n\n        invalidate(pointNum = 0) {\n            this.lastPointNum = Math.min(pointNum, this.lastPointNum);\n            this.updateId++;\n        }\n\n        reset() {\n            if (this.lastLen > 0) {\n                this.clearBufferData();\n            }\n            this.updateId++;\n            this.lastLen = 0;\n            this.lastPointData = 0;\n            this.points.length = 0;\n            this.instanceCount = 0;\n        }\n\n        clearBufferData() {\n            const {points, strideBytes, stridePoints} = this;\n            this.lastPointNum = 0;\n            this.lastPointData = 0;\n            const arrayLen = Math.max(0, points.length / stridePoints - 1);\n            const arrBuf = new ArrayBuffer(strideBytes * arrayLen);\n            this.lastLen = points.length;\n            this._floatView = new Float32Array(arrBuf);\n            this._u32View = new Uint32Array(arrBuf);\n            this._buffer.update(arrBuf);\n        }\n\n        updateBuffer() {\n            const {points, stridePoints, strideFloats} = this;\n\n            if (this.lastLen > points.length) {\n                this.lastLen = -1;\n            }\n            if (this.lastLen < points.length\n                || this.lastPointNum < this.lastLen) { // TODO: partial upload\n                this.clearBufferData();\n            }\n\n            if (this.lastPointNum == this.lastLen) {\n                return;\n            }\n\n            const {_floatView, _u32View} = this;\n            const bevel = this.jointStyle === PIXI.LINE_JOIN.BEVEL;\n            this.lastPointData = Math.min(this.lastPointData, this.lastPointNum);\n            let j = Math.round(this.lastPointNum * strideFloats / stridePoints); //actually that's int division\n            for (let i = this.lastPointNum; i < points.length - stridePoints; i += stridePoints) {\n                const prev = i - stridePoints;\n                const next = i + stridePoints;\n                const next2 = i + stridePoints * 2;\n\n                _floatView[j++] = points[i];\n                _floatView[j++] = points[i + 1];\n                _floatView[j++] = points[next];\n                _floatView[j++] = points[next + 1];\n\n                const dx = points[next] - points[i];\n                const dy = points[next + 1] - points[i + 1];\n                const D = Math.sqrt(dx * dx + dy * dy);\n\n                const k = dy / dx;\n                if (prev >= 0) {\n                    const dx2 = points[i] - points[prev];\n                    const dy2 = points[i + 1] - points[prev + 1];\n                    if (bevel) {\n                        const D2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n                        _floatView[j++] = (dy2 * D + dy * D2) / (dx2 * D + dx * D2);\n                    } else {\n                        _floatView[j++] = dy2 / dx2;\n                    }\n                } else {\n                    _floatView[j++] = k;\n                }\n\n                if (next2 < points.length) {\n                    const dx2 = points[next2] - points[next];\n                    const dy2 = points[next2 + 1] - points[next + 1];\n                    if (bevel) {\n                        const D2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n                        _floatView[j++] = (dy2 * D + dy * D2) / (dx2 * D + dx * D2);\n                    } else {\n                        _floatView[j++] = dy2 / dx2;\n                    }\n                } else {\n                    _floatView[j++] = k;\n                }\n            }\n            this._buffer.update();\n            this.instanceCount = Math.round(points.length / stridePoints - 1);\n\n            this.lastPointNum = this.lastLen;\n            this.lastPointData = this.lastLen; // TODO: partial upload\n\n            if (this.legacyGeom) {\n                this.updateLegacy();\n            }\n        }\n\n        legacyGeom: PIXI.Geometry = null;\n        legacyBuffer: PIXI.Buffer = null;\n\n        initLegacy() {\n            if (this.legacyGeom) {\n                return;\n            }\n            this.legacyGeom = new PIXI.Geometry();\n            this.legacyBuffer = new PIXI.Buffer(new Float32Array(0), false, false);\n            this.legacyGeom.addAttribute('aPoint0', this.legacyBuffer, 2, false, TYPES.FLOAT)\n                .addAttribute('aPoint1', this.legacyBuffer, 2, false, TYPES.FLOAT)\n                .addAttribute('aSides', this.legacyBuffer, 2, false, TYPES.FLOAT)\n                .addAttribute('aQuad', this.legacyBuffer, 2, false, TYPES.FLOAT)\n                .addIndex(new PIXI.Buffer(new Uint16Array([0, 1, 2, 0, 2, 3]), false, true));\n        }\n\n        updateLegacy() {\n            const {legacyBuffer, _floatView, _u32View, strideFloats} = this;\n            const strideLegacy = 8;\n            const quadsCount = this._floatView.length / strideFloats;\n            const legacyLen = quadsCount * strideLegacy * 4;\n            if ((legacyBuffer.data as Float32Array).length !== legacyLen) {\n                legacyBuffer.data = new Float32Array(legacyLen);\n                this.legacyGeom.getIndex().update(PIXI.utils.createIndicesForQuads(quadsCount));\n            }\n            const floats: Float32Array = legacyBuffer.data as any;\n            const quad: Float32Array = this._quad.data as any;\n\n            for (let i = 0, j = 0; i < this._floatView.length;) {\n                for (let k = 0; k < 4; k++) {\n                    floats[j++] = _floatView[i];\n                    floats[j++] = _floatView[i + 1];\n                    floats[j++] = _floatView[i + 2];\n                    floats[j++] = _floatView[i + 3];\n                    floats[j++] = _floatView[i + 4];\n                    floats[j++] = _floatView[i + 5];\n                    floats[j++] = quad[k * 2]\n                    floats[j++] = quad[k * 2 + 1];\n                }\n                i += strideFloats;\n            }\n        }\n    }\n\n    export interface PlotOptions {\n        lineWidth?: number;\n        nativeLineWidth?: number;\n        jointStyle?: PIXI.LINE_JOIN;\n    }\n\n    export class Plot extends PIXI.Mesh {\n        constructor(options: PlotOptions) {\n            const geometry = new PlotGeometry();\n            const shader = new PlotShader();\n            if (options) {\n                if (options.jointStyle !== undefined) {\n                    geometry.jointStyle = options.jointStyle;\n                }\n                if (options.lineWidth !== undefined) {\n                    shader.uniforms.lineWidth[0] = options.lineWidth;\n                }\n                if (options.nativeLineWidth !== undefined) {\n                    shader.uniforms.lineWidth[1] = options.nativeLineWidth;\n                }\n            }\n\n            super(geometry, shader);\n        }\n\n        moveTo(x: number, y: number) {\n            const geometry = this.geometry as PlotGeometry;\n            geometry.moveTo(x, y);\n        }\n\n        lineTo(x: number, y: number) {\n            const geometry = this.geometry as PlotGeometry;\n            geometry.lineTo(x, y);\n        }\n\n        lineBy(x: number, y: number) {\n            const geometry = this.geometry as PlotGeometry;\n            geometry.lineBy(x, y);\n        }\n\n        lineStyle(width?: number, nativeWidth?: number, jointStyle?: number) {\n            const geometry = this.geometry as PlotGeometry;\n            if (width !== undefined) {\n\n                this.shader.uniforms.lineWidth[0] = width;\n            }\n            if (nativeWidth !== undefined) {\n                this.shader.uniforms.lineWidth[1] = nativeWidth;\n            }\n            if (jointStyle !== undefined) {\n                geometry.jointStyle = jointStyle;\n            }\n            geometry.invalidate();\n        }\n\n        clear() {\n            (this.geometry as PlotGeometry).reset();\n        }\n\n        _renderDefault(renderer: PIXI.Renderer): void {\n            const geometry = this.geometry as PlotGeometry;\n\n            const useLegacy = !renderer.geometry.hasInstance;\n            if (useLegacy) {\n                geometry.initLegacy();\n            }\n            geometry.updateBuffer();\n            if (geometry.instanceCount === 0) {\n                return;\n            }\n            const rt = renderer.renderTexture.current;\n            this.shader.uniforms.resolution = rt ? rt.baseTexture.resolution : renderer.resolution;\n\n            if (useLegacy) {\n                // hacky!\n                (this as any).geometry = geometry.legacyGeom;\n                super._renderDefault(renderer);\n                (this as any).geometry = geometry;\n                return;\n            }\n            super._renderDefault(renderer);\n        }\n\n        _renderCanvas(renderer: PIXI.CanvasRenderer): void {\n            const {points, stridePoints} = this.geometry as BarsGeometry;\n            const {context} = renderer;\n            const len = points.length;\n            if (len < 2) {\n                return;\n            }\n            const wt = this.transform.worldTransform;\n            renderer.setContextTransform(wt);\n\n            const scale = Math.sqrt(wt.a * wt.a + wt.b * wt.b);\n            context.lineWidth = this.shader.uniforms.lineWidth[0] + this.shader.uniforms.lineWidth[1] / scale;\n\n            context.strokeStyle = PIXI.utils.hex2string(this.tint);\n            context.globalAlpha = this.worldAlpha;\n\n            context.beginPath();\n            context.moveTo(points[0], points[1]);\n            for (let i = 2; i < points.length; i += stridePoints) {\n                context.lineTo(points[i], points[i + 1]);\n            }\n            context.stroke();\n            context.beginPath();\n\n            context.globalAlpha = 1.0;\n        }\n    }\n}\n","namespace pixi_candles {\r\n    const gradVert = `\r\nattribute vec2 aVertexPosition;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 translationMatrix;\r\nuniform vec2 rangeY;\r\n\r\nvarying float vOrdinate;\r\n\r\nvoid main(void)\r\n{\r\n    vec2 pos = (translationMatrix * vec3(aVertexPosition, 1.0)).xy;\r\n    if (pos.y > rangeY.y) {\r\n        pos.y = rangeY.y;\r\n    }\r\n    gl_Position = vec4((projectionMatrix * vec3(pos, 1.0)).xy, 0.0, 1.0);\r\n    vOrdinate = pos.y;\r\n}`;\r\n    const gradFrag = `\r\nvarying float vOrdinate;\r\n\r\nuniform vec4 colorTop;\r\nuniform vec4 colorBottom;\r\nuniform vec4 uColor;\r\nuniform vec2 rangeY2;\r\n\r\nvoid main(void)\r\n{\r\n    vec4 color = colorTop;\r\n    if (vOrdinate > rangeY2.x) {\r\n        if (vOrdinate >= rangeY2.y) {\r\n            color = colorBottom;\r\n        } else {\r\n            color = colorTop + (colorBottom - colorTop) * (vOrdinate - rangeY2.x) / (rangeY2.y - rangeY2.x);\r\n        }\r\n    }\r\n\r\n    color.rgb *= color.a;\r\n    gl_FragColor = color * uColor;\r\n}\r\n`;\r\n\r\n    export class PlotGradientShader extends PIXI.MeshMaterial {\r\n        static _prog: PIXI.Program = null;\r\n\r\n        static getProgram(): PIXI.Program {\r\n            if (!PlotGradientShader._prog) {\r\n                PlotGradientShader._prog = new PIXI.Program(gradVert, gradFrag);\r\n            }\r\n            return PlotGradientShader._prog;\r\n        }\r\n\r\n        constructor() {\r\n            const rangeY = new Float32Array(2);\r\n            super(PIXI.Texture.WHITE, {\r\n                uniforms: {\r\n                    resolution: 1,\r\n                    colorTop: new Float32Array([1, 1, 1, 1]),\r\n                    colorBottom: new Float32Array([1, 1, 1, 1]),\r\n                    rangeY: rangeY,\r\n                    rangeY2: rangeY,\r\n                },\r\n                program: PlotGradientShader.getProgram()\r\n            });\r\n        }\r\n    }\r\n\r\n    import TYPES = PIXI.TYPES;\r\n\r\n    export class PlotGradientGeometry extends PIXI.Geometry {\r\n        constructor(_static = false) {\r\n            super();\r\n            this.initGeom(_static);\r\n            this.reset();\r\n        }\r\n\r\n        lastLen = 0;\r\n        lastPointNum = 0;\r\n        lastPointData = 0;\r\n        points: Array<number> = [];\r\n        _floatView: Float32Array = null;\r\n        _buffer: PIXI.Buffer = null;\r\n\r\n        initGeom(_static: boolean) {\r\n            this._buffer = new PIXI.Buffer(new Float32Array(0), _static, false);\r\n\r\n            this.addAttribute('aVertexPosition', this._buffer, 2, false, TYPES.FLOAT);\r\n        }\r\n\r\n        stridePoints = 2;\r\n        strideFloats = 2 * 6;\r\n        strideBytes = 8 * 6;\r\n\r\n        moveTo(x: number, y: number) {\r\n            const {points} = this;\r\n            points.push(x);\r\n            points.push(y);\r\n        }\r\n\r\n        lineTo(x: number, y: number) {\r\n            const {points} = this;\r\n            points.push(x);\r\n            points.push(y);\r\n        }\r\n\r\n        invalidate(pointNum = 0) {\r\n            this.lastPointNum = Math.min(pointNum, this.lastPointNum);\r\n        }\r\n\r\n        reset() {\r\n            if (this.lastLen > 0) {\r\n                this.clearBufferData();\r\n            }\r\n            this.lastLen = 0;\r\n            this.lastPointData = 0;\r\n            this.points.length = 0;\r\n        }\r\n\r\n        clearBufferData() {\r\n            const {points, strideFloats, stridePoints} = this;\r\n            this.lastPointNum = 0;\r\n            this.lastPointData = 0;\r\n            const arrayLen = Math.max(0, points.length / stridePoints - 1);\r\n            this._floatView = new Float32Array(strideFloats * arrayLen);\r\n            this._buffer.update(this._floatView);\r\n            this.lastLen = points.length;\r\n        }\r\n\r\n        updateBuffer() {\r\n            const {points, stridePoints, strideFloats} = this;\r\n\r\n            if (this.lastLen > points.length) {\r\n                this.lastLen = -1;\r\n            }\r\n            if (this.lastLen < points.length\r\n                || this.lastPointNum < this.lastLen) { // TODO: partial upload\r\n                this.clearBufferData();\r\n            }\r\n\r\n            if (this.lastPointNum == this.lastLen) {\r\n                return;\r\n            }\r\n\r\n            const {_floatView} = this;\r\n            this.lastPointData = Math.min(this.lastPointData, this.lastPointNum);\r\n            let j = Math.round(this.lastPointNum * strideFloats / stridePoints);\r\n            for (let i = this.lastPointNum; i < points.length - stridePoints; i += stridePoints) {\r\n                const next = i + stridePoints;\r\n\r\n                const x = points[i], y = points[i + 1], x2 = points[next], y2 = points[next + 1];\r\n\r\n                const bottomLine = 10000.0;\r\n\r\n                _floatView[j++] = x;\r\n                _floatView[j++] = y;\r\n                _floatView[j++] = x2;\r\n                _floatView[j++] = y2;\r\n                _floatView[j++] = x2;\r\n                _floatView[j++] = bottomLine;\r\n                _floatView[j++] = x;\r\n                _floatView[j++] = y;\r\n                _floatView[j++] = x2;\r\n                _floatView[j++] = bottomLine;\r\n                _floatView[j++] = x;\r\n                _floatView[j++] = bottomLine;\r\n            }\r\n            this._buffer.update();\r\n\r\n            this.lastPointNum = this.lastLen;\r\n            this.lastPointData = this.lastLen; // TODO: partial upload\r\n        }\r\n    }\r\n\r\n    export class PlotGradient extends PIXI.Mesh {\r\n        constructor() {\r\n            super(new PlotGradientGeometry(), new PlotGradientShader());\r\n        }\r\n\r\n        get coordTop(): number {\r\n            return this.shader.uniforms.rangeY[0];\r\n        }\r\n\r\n        set coordTop(value: number) {\r\n            this.shader.uniforms.rangeY[0] = value;\r\n        }\r\n\r\n        get coordBottom(): number {\r\n            return this.shader.uniforms.rangeY[1];\r\n        }\r\n\r\n        set coordBottom(value: number) {\r\n            this.shader.uniforms.rangeY[1] = value;\r\n        }\r\n\r\n        get alphaTop(): number {\r\n            return this.shader.uniforms.colorTop[3];\r\n        }\r\n\r\n        set alphaTop(value: number) {\r\n            this.shader.uniforms.colorTop[3] = value;\r\n        }\r\n\r\n        get alphaBottom(): number {\r\n            return this.shader.uniforms.colorBottom[3];\r\n        }\r\n\r\n        set alphaBottom(value: number) {\r\n            this.shader.uniforms.colorBottom[3] = value;\r\n        }\r\n\r\n        get colorBottom(): number {\r\n            return PIXI.utils.rgb2hex(this.shader.uniforms.colorBottom);\r\n        }\r\n\r\n        set colorBottom(value: number) {\r\n            PIXI.utils.hex2rgb(value, this.shader.uniforms.colorBottom);\r\n        }\r\n\r\n        get colorTop(): number {\r\n            return PIXI.utils.rgb2hex(this.shader.uniforms.colorTop);\r\n        }\r\n\r\n        set colorTop(value: number) {\r\n            PIXI.utils.hex2rgb(value, this.shader.uniforms.colorTop);\r\n        }\r\n\r\n        masterPlot: Plot = null;\r\n        plotUpdateId = -1;\r\n\r\n        clear() {\r\n            if (!this.masterPlot) {\r\n                (this.geometry as PlotGradientGeometry).reset();\r\n            }\r\n        }\r\n\r\n        moveTo(x: number, y: number) {\r\n            this.lineTo(x, y);\r\n        }\r\n\r\n        lineTo(x: number, y: number) {\r\n            if (!this.masterPlot) {\r\n                (this.geometry as PlotGradientGeometry).lineTo(x, y);\r\n            }\r\n        }\r\n\r\n        _render(renderer: PIXI.Renderer): void {\r\n            const geom = this.geometry as PlotGradientGeometry;\r\n            if (this.masterPlot) {\r\n                const plotGeom = this.masterPlot.geometry as PlotGeometry;\r\n                if (this.plotUpdateId !== plotGeom.updateId) {\r\n                    this.plotUpdateId = plotGeom.updateId;\r\n                    geom.points = plotGeom.points;\r\n                    geom.invalidate();\r\n                }\r\n            }\r\n            geom.updateBuffer();\r\n\r\n            this._renderDefault(renderer);\r\n        }\r\n\r\n        _renderCanvas(renderer: PIXI.CanvasRenderer): void {\r\n            const geom = this.geometry as PlotGradientGeometry;\r\n            // let points = geom.points;\r\n            // if (this.masterPlot) {\r\n            //     const plotGeom = this.masterPlot.geometry as PlotGeometry;\r\n            //     if (this.plotUpdateId !== plotGeom.updateId) {\r\n            //         this.plotUpdateId = plotGeom.updateId\r\n            //         geom.points = plotGeom.points;\r\n            //     }\r\n            // }\r\n            //\r\n            //\r\n            // const {points, stridePoints} = this.geometry as BarsGeometry;\r\n            // const {context} = renderer;\r\n            // const len = points.length;\r\n            // if (len < 2) {\r\n            //     return;\r\n            // }\r\n            // const wt = this.transform.worldTransform;\r\n            // renderer.setContextTransform(wt);\r\n            //\r\n            // const scale = Math.sqrt(wt.a * wt.a + wt.b * wt.b);\r\n            // context.lineWidth = this.shader.uniforms.lineWidth[0] + this.shader.uniforms.lineWidth[1] / scale;\r\n            //\r\n            // context.strokeStyle = PIXI.utils.hex2string(this.tint);\r\n            // context.globalAlpha = this.worldAlpha;\r\n            //\r\n            // context.beginPath();\r\n            // context.moveTo(points[0], points[1]);\r\n            // for (let i = 2; i < points.length; i += stridePoints) {\r\n            //     context.lineTo(points[i], points[i + 1]);\r\n            // }\r\n            // context.stroke();\r\n            // context.beginPath();\r\n            //\r\n            // context.globalAlpha = 1.0;\r\n        }\r\n    }\r\n}\r\n","/// <reference types=\"pixi.js-legacy\" />\n\nnamespace pixi_candles {\n    (PIXI as any).candles = pixi_candles;\n}\n\ndeclare module \"pixi-candles\" {\n    export = pixi_candles;\n}\n"]}